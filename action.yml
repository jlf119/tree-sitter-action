name: "Tree-sitter fact dump"
description: "Emit deterministic code_facts_full.json (all symbols) and code_facts_delta.json (changed files only)"
author: "Joseph Folkes"
branding:
  icon: archive
  color: purple

inputs:
  out_full:
    description: "Path for the full JSON output"
    required: true
  out_delta:
    description: "Path for the delta JSON output"
    required: true
  base_sha:
    description: "Commit SHA to diff against for the delta"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    # ---------- cache compiled grammars ----------
    - name: Restore / build Tree-sitter grammars
      id: grammars
      uses: actions/cache@v4
      with:
        path: vendor/build
        key: ${{ runner.os }}-ts-grammars-v1

    - name: Compile grammars (first-run only)
      if: steps.grammars.outputs.cache-hit != 'true'
      shell: bash
      run: |
        python - <<'PY'
        import pathlib, subprocess, sys
        vendor = pathlib.Path('vendor').resolve()
        build  = vendor / 'build'
        build.mkdir(parents=True, exist_ok=True)
        grammars = [str(p) for p in vendor.glob('tree-sitter-*')]
        subprocess.check_call(['python', '-m', 'tree_sitter.build_library',
                               str(build/'lang.so'), *grammars])
        PY

    # ---------- run extractor ----------
    - name: Dump code facts (full + delta)
      shell: bash
      run: |
        python "${{ github.action_path }}/extractor.py" \
          --out-full   "${{ inputs.out_full }}" \
          --out-delta  "${{ inputs.out_delta }}" \
          --base-sha   "${{ inputs.base_sha }}"